pipeline { 
    agent any //{label "docker-build-Jenkins"} 
    tools {
        maven "3.9.0"
        
    } 
    
    environment{

        DOCKERHUB_CREDENTIALS = credentials('cesarnttdata_dockerhub')
    }
    stages{  

        /*stage('SCM checkout') {
            steps {
               
                git 'https://github.com/CesarDevops/EjercicioPipeline.git'
                
            }
        } 
        */

        stage('Build') { 
            steps { 
               script{
                sh """
                cd rest
                maven build
                """
                }
                //sh 'maven task'
                git branch: 'main', url: 'https://github.com/CesarDevops/pipeline.git'
                //sh 'maven init'
                //sh 'maven wrapper'
                //sh './maven build'
                echo 'build succesfull' 
                //sh "mvn -Dmaven.test.failure.ignore=true clean package"
                //bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        }
         stage('test with Sonarqube') {
            steps {
                script{
                    def scannerHome = tool 'Sonarqube'
                    withSonarQubeEnv('Sonarqube'){
                        sh"""
                        cd rest 
                        maven sonarqube \
                        -Dsonar.project=sonarqube \
                        -Dsonar.host.url=http://10.0.187.245:9000 \
                        -Dsonar.login=274e66b2b616791670b6cc2c4bc86ab44d5c6e10 \
                        -D sonar.sourceEncoding=UTF-8 \
                        -D sonar.language=java 
                        """
                    }
                }
            }
        }
        stage('Build docker images') {
            steps {
                //sh 'make publish'
                sh 'docker build -t usuariosweb:v1 .'
                //sh 'docker build -t ${cesarnttdata}:${Usuario.v1} .'
                echo 'Build docker images'  
               
            }
        }
         /*stage('login to dockerhub') {
            steps {

                
                withCredentials([usernamePassword(credentialsId: 'cesarnttdata_dockerhub', passwordVariable: 'DOCKERHUB_CREDENTIALS_PSW', usernameVariable: 'DOCKERHUB_CREDENTIALS_USR')]){
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                
                // sh 'docker push 8-jre-alpine:latest'
                }
                echo 'Login dockerhub'  
                
            }
        }
        stage('Push images') {
            steps {

                sh 'docker push cesarnttdata/img_micros.3:$BUILD_NUMBER'
                //withCredentials([usernamePassword(credentialsId: 'docker_hub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]){
                   // sh 'docker push 8-jre-alpine:latest'
                //}
                echo 'Push docker images'  
                
            }
        }
         */

       
        
    }
   

}


/*post {

        always {
                sh 'docker logout'
        }
        
}
*/